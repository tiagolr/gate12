name: Release

on:
  pull_request:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

jobs:
  build-windows:
    runs-on: windows-2022
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
         submodules: recursive

      - name: Generate Build Files
        run: |
          cmake -G "Visual Studio 17 2022" -DCMAKE_BUILD_TYPE=Release -DBUILD_STANDALONE=OFF -S . -B ./build

      - name: Build Project
        run: |
         cmake --build ./build --config Release

      - name: List errors
        run: |
          if exist .\build\CMakeFiles\CMakeError.log type .\build\CMakeFiles\CMakeError.log
        shell: cmd

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: gate12-win
          path: |
            ./build/gate12_artefacts/Release/LV2
            ./build/gate12_artefacts/Release/VST3
            !./build/gate12_artefacts/Release/VST3/*.exp
            !./build/gate12_artefacts/Release/VST3/*.lib
            !./build/gate12_artefacts/Release/LV2/*.exp
            !./build/gate12_artefacts/Release/LV2/*.lib

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
         submodules: recursive

      - name: Install Dependencies
        run: brew install cmake ninja

      - name: Generate Build Files
        run: |
          cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release -DBUILD_STANDALONE=OFF -DCMAKE_OSX_ARCHITECTURES="x86_64;arm64" -S . -B ./build

      - name: Build Project
        run: |
         cmake --build ./build --config Release

      - name: Copy readme
        run: |
          cp ./doc/macos-readme.txt ./build/gate12_artefacts/Release/readme.txt

      - name: List errors
        run: cat "./build/CMakeFiles/CMakeError.log" || true

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: gate12-macos
          path: |
            ./build/gate12_artefacts/Release/LV2
            ./build/gate12_artefacts/Release/AU
            ./build/gate12_artefacts/Release/VST3
            ./build/gate12_artefacts/Release/readme.txt
            !./build/gate12_artefacts/Release/VST3/*.exp
            !./build/gate12_artefacts/Release/VST3/*.lib

  build-linux:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
         submodules: recursive

      - name: Install Dependencies
        run: |
          sudo apt update
          sudo apt-get install libx11-dev libfreetype-dev libfontconfig1-dev libasound2-dev libxrandr-dev libxinerama-dev libxcursor-dev

      - name: Generate Build Files
        run: |
          cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release -DBUILD_STANDALONE=OFF -S . -B ./build

      - name: Build Project
        run: |
         cmake --build ./build --config Release

      - name: List errors
        run: cat "./build/CMakeFiles/CMakeError.log" || true

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: gate12-linux
          path: |
            ./build/gate12_artefacts/Release/LV2
            ./build/gate12_artefacts/Release/VST3
            !./build/gate12_artefacts/Release/VST3/*.exp
            !./build/gate12_artefacts/Release/VST3/*.lib

  release:
    runs-on: ubuntu-latest
    needs: [build-windows, build-macos, build-linux]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: gate12-win
          path: artifacts/gate12-win

      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        with:
          name: gate12-macos
          path: artifacts/gate12-macos

      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: gate12-linux
          path: artifacts/gate12-linux

      - name: Append tag to artifacts
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}  # Extracts the tag name, e.g., v1.0.0

          # Zip each platform's artifacts with the tag in the name
          cd artifacts
          zip -r gate12-win-${TAG_NAME}.zip gate12-win
          zip -r gate12-macos-${TAG_NAME}.zip gate12-macos
          zip -r gate12-linux-${TAG_NAME}.zip gate12-linux

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          tag_name: ${{ github.ref_name }}
          files: |
            artifacts/gate12-win-*.zip
            artifacts/gate12-macos-*.zip
            artifacts/gate12-linux-*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
